apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  metadata:
    name: database
  stringData:
    db-name: sample
    db-password: password
    db-user: user
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: database
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: database
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        name: database
        app: database
    template:
      metadata:
        labels:
          name: database
          app: database
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: db-user
                name: database
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: database
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: db-name
                name: database
          image: registry.ocp4.example.com:8443/rhel8/postgresql-13:1-7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1536Mi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: database
  status: {}
kind: List
metadata: {}
